@page "/"
@using MauiMadness.Services.ConditionalCompilation;
@using MauiMadness.Services;
@inject DeviceOrientationService orService

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you? Notice I've supplied the title." />

<input @bind="internetStatus" />

<button class="btn btn-primary" @onclick=IsInternet>Do I have internet?</button>

<input @bind="orientationStatus" />

<button class="btn btn-primary" @onclick=GetOrientationStatus>How is my device oriented?</button>


<button class="btn btn-primary" @onclick=ThrowException>Want to see me throw an error?</button>


@*<button class="btn btn-primary" @onclick=FlashlightOn>Flashlight on</button>

<button class="btn btn-primary" @onclick=FlashlightOff>Flashlight off</button>
*@



<Counter IncrementAmount="10"/>

@code{

    private string? internetStatus { get; set; } = "Click button to see if internet is available.";

    private string? orientationStatus { get; set; } = "Click button to see how your device is oriented.";



    private void IsInternet()
    {
        // Connection to internet is available
        if (Connectivity.Current.NetworkAccess is NetworkAccess.Internet)
            internetStatus = "You've got internet lol";
        else
            internetStatus = "No internet available.";
    }

    private void GetOrientationStatus()
    {
        orientationStatus = orService.GetOrientation().ToString();

        //var orientation = orService.GetOrientation();
        //switch (orientation)
        //{
        //    case DeviceOrientation.Portrait:
        //        orientationStatus = "Portrait";
        //        break;
        //    case DeviceOrientation.Landscape:
        //        orientationStatus = "Landscape";
        //        break;
        //    case DeviceOrientation.Undefined:
        //        orientationStatus = "Undefined (throw)";
        //        break;
        //    default:
        //        orientationStatus = "What did you do???";
        //        break;
        //}
    }

    private void ThrowException()
    {
        throw new Exception("Custom Message but it doesn't show up.");

        //var orientation = orService.GetOrientation();
        //switch (orientation)
        //{
        //    case DeviceOrientation.Portrait:
        //        orientationStatus = "Portrait";
        //        break;
        //    case DeviceOrientation.Landscape:
        //        orientationStatus = "Landscape";
        //        break;
        //    case DeviceOrientation.Undefined:
        //        orientationStatus = "Undefined (throw)";
        //        break;
        //    default:
        //        orientationStatus = "What did you do???";
        //        break;
        //}
    }

    private void FlashlightOn()
    {
        Flashlight.Default.TurnOnAsync();
        
        //await Flashlight.Default.TurnOffAsync();

    }

    private void FlashlightOff()
    {
        Flashlight.Default.TurnOffAsync();
        
        //await Flashlight.Default.TurnOffAsync();

    }

}
